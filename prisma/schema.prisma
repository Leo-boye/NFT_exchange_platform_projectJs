// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String   @id @default(uuid())
  name              String
  email             String   @unique
  password          String
  role              UserRole @default(BASIC)
  blockchainAddress String   @unique
  team              Team?    @relation(fields: [teamId], references: [id])
  teamId            String?
  isTeamOwner       Boolean  @default(false)
  nft               Nft[]
  buys              Sell[]   @relation("buyer")
  sells             Sell[]   @relation("seller")
}

model Team {
  id         String       @id @default(uuid())
  name       String       @unique
  balance    Int          @default(0)
  members    User[]
  collection Collection[]
}

model Nft {
  id           String      @id @default(uuid())
  name         String
  image        String
  price        Int
  status       Status      @default(DRAFT)
  rating       Float       @default(0)
  ratingCount  Int         @default(0)
  owner        User        @relation(fields: [ownerId], references: [id])
  ownerId      String
  collection   Collection? @relation(fields: [collectionId], references: [id])
  collectionId String?
  sell         Sell[]
}

model Collection {
  id                          String  @id @default(uuid())
  name                        String
  logo                        String?
  status                      Status  @default(DRAFT)
  autoArchivingTimeInSecondes Int?
  nfts                        Nft[]
  team                        Team    @relation(fields: [teamId], references: [id])
  teamId                      String
  userName                    String
  sell                        Sell[]
}

model Sell {
  id           String      @id @default(uuid())
  datetime     DateTime
  buyer        User        @relation("buyer", fields: [buyerId], references: [id])
  buyerId      String
  seller       User        @relation("seller", fields: [sellerId], references: [id])
  sellerId     String
  nft          Nft         @relation(fields: [nftId], references: [id])
  nftId        String
  collection   Collection? @relation(fields: [collectionId], references: [id])
  collectionId String?
}

enum UserRole {
  ADMIN
  BASIC
}

enum Status {
  DRAFT
  PUBLISHED
  ARCHIVED
}
